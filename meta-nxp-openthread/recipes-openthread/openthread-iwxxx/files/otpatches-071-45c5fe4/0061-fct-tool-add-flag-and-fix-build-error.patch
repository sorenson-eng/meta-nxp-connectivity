/*
*  Copyright (c) 2020, The OpenThread Authors.
*  Copyright 2024 NXP
*  All rights reserved.
*
*  Redistribution and use in source and binary forms, with or without
*  modification, are permitted provided that the following conditions are met:
*  1. Redistributions of source code must retain the above copyright
*     notice, this list of conditions and the following disclaimer.
*  2. Redistributions in binary form must reproduce the above copyright
*     notice, this list of conditions and the following disclaimer in the
*     documentation and/or other materials provided with the distribution.
*  3. Neither the name of the copyright holder nor the
*     names of its contributors may be used to endorse or promote products
*     derived from this software without specific prior written permission.
*
*  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
*  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
*  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
*  ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
*  LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
*  CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
*  SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
*  INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
*  CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
*  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
*  POSSIBILITY OF SUCH DAMAGE.
*/

/*
* Header for patch information.
* Description           : ot-fct is used to store the power calibration table into the factory configuration
*                         file and show the power related tables.
* Version               : v001
* Mandatory/Optional    : Mandatory
* Impact if not applied : ot-fct unable to access file provided by build paramter.
*/

diff --git a/tools/ot-fct/CMakeLists.txt b/tools/ot-fct/CMakeLists.txt
index aea348f0f..bfe180724 100644
--- a/tools/ot-fct/CMakeLists.txt
+++ b/tools/ot-fct/CMakeLists.txt
@@ -36,7 +36,7 @@ include_directories(
     ${OPENTHREAD_DIR}/src/core
     ${OPENTHREAD_DIR}/src/posix/platform
 )
- 
+
 add_executable(ot-fct
     cli.cpp
     main.cpp
@@ -47,3 +47,9 @@ add_executable(ot-fct
     ${OPENTHREAD_DIR}/src/posix/platform/power.cpp
     ${OPENTHREAD_DIR}/src/posix/platform/config_file.cpp
 )
+
+set(OT_POSIX_PRODUCT_CONFIG "" CACHE STRING "OpenThread product config file")
+
+if (OT_POSIX_PRODUCT_CONFIG)
+    target_compile_options(ot-fct PRIVATE -DOPENTHREAD_POSIX_CONFIG_PRODUCT_CONFIG_FILE=\"${OT_POSIX_PRODUCT_CONFIG}\")
+endif()
diff --git a/tools/ot-fct/cli.cpp b/tools/ot-fct/cli.cpp
index 893e595b4..e478e4fd8 100644
--- a/tools/ot-fct/cli.cpp
+++ b/tools/ot-fct/cli.cpp
@@ -88,7 +88,6 @@ otError Cli::GetNextDomain(int &aIterator, Power::Domain &aDomain)
         break;
     }
 
-exit:
     return error;
 }
 
@@ -123,8 +122,6 @@ otError Cli::ProcessRegionDomainTable(Utils::CmdLineParser::Arg aArgs[])
     otError error    = OT_ERROR_NONE;
     int     iterator = 0;
     char    value[kMaxValueSize];
-    char   *domain;
-    char   *psave;
 
     VerifyOrExit(aArgs[0].IsEmpty(), error = OT_ERROR_INVALID_ARGS);
 
@@ -277,7 +274,7 @@ exit:
 void Cli::ProcessCommand(Utils::CmdLineParser::Arg aArgs[])
 {
     otError error = OT_ERROR_NOT_FOUND;
-    int     i;
+    long unsigned int     i;
 
     for (i = 0; i < (sizeof(sCommands) / sizeof(sCommands[0])); i++)
     {
@@ -288,7 +285,6 @@ void Cli::ProcessCommand(Utils::CmdLineParser::Arg aArgs[])
         }
     }
 
-exit:
     AppendErrorResult(error);
 }
 
