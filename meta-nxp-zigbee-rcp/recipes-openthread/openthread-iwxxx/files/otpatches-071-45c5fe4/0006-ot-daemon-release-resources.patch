/*
*  Copyright (c) 2020, The OpenThread Authors.
*  Copyright 2023-2024 NXP
*  All rights reserved.
*
*  Redistribution and use in source and binary forms, with or without
*  modification, are permitted provided that the following conditions are met:
*  1. Redistributions of source code must retain the above copyright
*     notice, this list of conditions and the following disclaimer.
*  2. Redistributions in binary form must reproduce the above copyright
*     notice, this list of conditions and the following disclaimer in the
*     documentation and/or other materials provided with the distribution.
*  3. Neither the name of the copyright holder nor the
*     names of its contributors may be used to endorse or promote products
*     derived from this software without specific prior written permission.
*
*  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
*  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
*  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
*  ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
*  LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
*  CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
*  SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
*  INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
*  CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
*  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
*  POSSIBILITY OF SUCH DAMAGE.
*/

/*
* Header for patch information.
* Description           : This patch releases resources when ot-daemon should be exits on error. It also add debug traces.
* Version               : v004
* Mandatory/Optional    : Mandatory
* Impact if not applied : When ot-deamon exits on error, it cannot be re-started because the gpio
*                         resources have not been released before exiting.
*/

diff --git a/src/posix/platform/hdlc_interface.cpp b/src/posix/platform/hdlc_interface.cpp
index 321bfbae2..f6dc11bb3 100644
--- a/src/posix/platform/hdlc_interface.cpp
+++ b/src/posix/platform/hdlc_interface.cpp
@@ -183,6 +183,7 @@ HdlcInterface::~HdlcInterface(void) { Deinit(); }
 
 void HdlcInterface::Deinit(void)
 {
+    otLogDebgPlat("Deinit: close %s", (mSockFd >= 0)?("Radio "):(""));
     CloseFile();
 
     mReceiveFrameCallback = nullptr;
diff --git a/src/posix/platform/spi_interface.cpp b/src/posix/platform/spi_interface.cpp
index 4c196f195..63e9a0691 100644
--- a/src/posix/platform/spi_interface.cpp
+++ b/src/posix/platform/spi_interface.cpp
@@ -174,6 +174,7 @@ SpiInterface::~SpiInterface(void) { Deinit(); }
 
 void SpiInterface::Deinit(void)
 {
+    otLogDebgPlat("Deinit: close %s%s%s", (mSpiDevFd >= 0)?("SpiDev "):(""), (mResetGpioValueFd >= 0)?("ResetGpio "):(""), (mIntGpioValueFd >= 0)?("IntGpio "):(""));
     if (mSpiDevFd >= 0)
     {
         close(mSpiDevFd);
diff --git a/src/posix/platform/system.cpp b/src/posix/platform/system.cpp
index 5f3640a56..f022c6180 100644
--- a/src/posix/platform/system.cpp
+++ b/src/posix/platform/system.cpp
@@ -131,10 +131,14 @@ void otSysSetInfraNetif(const char *aInfraNetifName, int aIcmp6Socket)
 }
 #endif
 
+void platformDeinitRcpMode(void);
+
 void platformInitRcpMode(otPlatformConfig *aPlatformConfig)
 {
     platformRadioInit(get802154RadioUrl(aPlatformConfig->mCoprocessorUrls));
 
+    atexit(&platformDeinitRcpMode);
+
     // For Dry-Run option, only init the co-processor.
     VerifyOrExit(!aPlatformConfig->mDryRun);
 
